[{"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\App.js":"2","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\socketContext.js":"3","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\mainContext.js":"4","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\usersContext.js":"5","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\DefaultPage.js":"6","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\Login\\Login.js":"7","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\Chat\\Chat.js":"8"},{"size":424,"mtime":1733518979870,"results":"9","hashOfConfig":"10"},{"size":1071,"mtime":1733518979863,"results":"11","hashOfConfig":"10"},{"size":451,"mtime":1733518979871,"results":"12","hashOfConfig":"10"},{"size":409,"mtime":1733518979870,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1733518979871,"results":"14","hashOfConfig":"10"},{"size":496,"mtime":1733518979867,"results":"15","hashOfConfig":"10"},{"size":3110,"mtime":1733518979868,"results":"16","hashOfConfig":"10"},{"size":5967,"mtime":1733864173951,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11xfza0",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\index.js",[],["37","38"],"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\App.js",[],"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\socketContext.js",[],"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\mainContext.js",[],"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\usersContext.js",[],"C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\DefaultPage.js",["39"],"import { IconButton } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nexport default function DefaultPage() {\r\n    const history = useHistory()\r\n    const redirect = () => history.push('/')\r\n    return (\r\n        <div>\r\n            <IconButton mr={2} isRound='true' bg='green.300' color='white' icon={<BiArrowBack />} onClick={redirect} /> You're lost. Go home.\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\Login\\Login.js",["40"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MainContext } from \"../../mainContext\";\r\nimport { SocketContext } from \"../../socketContext\";\r\nimport { Flex, Heading, IconButton, Input } from \"@chakra-ui/react\";\r\nimport { RiArrowRightLine } from \"react-icons/ri\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { UsersContext } from \"../../usersContext\";\r\n\r\nconst Login = () => {\r\n  const socket = useContext(SocketContext);\r\n  const { name, setName, room, setRoom } = useContext(MainContext);\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n  const { setUsers } = useContext(UsersContext);\r\n\r\n  //Checks to see if there's a user already present\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users\", (users) => {\r\n      setUsers(users);\r\n    });\r\n  });\r\n\r\n  //Emits the login event and if successful redirects to chat and saves user data\r\n  const handleClick = () => {\r\n    socket.emit(\"login\", { name, room }, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        return toast({\r\n          position: \"top\",\r\n          title: \"Error\",\r\n          description: error,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n      history.push(\"/chat\");\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Hey there\",\r\n        description: `Welcome to ${room}`,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      className=\"login\"\r\n      flexDirection=\"column\"\r\n      mb=\"8\"\r\n      shadow={2}\r\n      color=\"white\"\r\n      boxShadow=\"md\"\r\n      p=\"6\"\r\n      rounded=\"md\"\r\n      bg=\"white\"\r\n      width={400}\r\n    >\r\n      <Heading\r\n        as=\"h1\"\r\n        size=\"4xl\"\r\n        textAlign=\"center\"\r\n        mb=\"8\"\r\n        fontFamily=\"DM Sans\"\r\n        fontWeight=\"400\"\r\n        color=\"gray.600\"\r\n        letterSpacing=\"-2px\"\r\n      >\r\n        Login\r\n      </Heading>\r\n      <Flex\r\n        className=\"form\"\r\n        gap=\"1rem\"\r\n        flexDirection={{ base: \"column\", md: \"row\" }}\r\n      >\r\n        <Input\r\n          variant=\"filled\"\r\n          type=\"text\"\r\n          placeholder=\"User Name\"\r\n          color={\"black\"}\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Flex>\r\n      <Flex\r\n        className=\"form\"\r\n        gap=\"1rem\"\r\n        flexDirection={{ base: \"column\", md: \"row\" }}\r\n        my={3}\r\n      >\r\n        <Input\r\n          variant=\"filled\"\r\n          type=\"text\"\r\n          placeholder=\"Room Name\"\r\n          value={room}\r\n          color={\"black\"}\r\n          onChange={(e) => setRoom(e.target.value)}\r\n        />\r\n      </Flex>\r\n      <Flex\r\n        justifyContent=\"center\"\r\n        sx={{ bg: \"blue\", rounded: 5 }}\r\n        onClick={handleClick}\r\n        cursor=\"pointer\"\r\n      >\r\n        <IconButton\r\n          colorScheme=\"transparent\"\r\n          isRound=\"true\"\r\n          icon={<RiArrowRightLine />}\r\n        ></IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\ADMIN\\Desktop\\price_negotiation\\socketio-react-chat-app\\client\\src\\components\\Chat\\Chat.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":1,"column":29,"nodeType":"47","messageId":"48","endLine":1,"endColumn":37},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]